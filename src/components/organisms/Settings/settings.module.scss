@import "scss/variables.scss";
@import "scss/breakpoints.scss";
@import "scss/mixins.scss";

.settings {
    width: 100%;
    height: 100%;
    color: $onPrimary;
    font-size: 2rem;

    // enable pointer events cuz they were disabled on parent nav layout
    > * {
        pointer-events: auto;
    }

    &[data-is-visible="true"] {
        > div:first-of-type {
            transform: translateX(0);
        }
        > button {
            transform: translate(0, 0);
        }
    }

    &[data-is-visible="false"] {
        > div:first-of-type {
            transform: translateX(-150%);
        }
        > button {
            transform: translate(-$marginUnit, -$marginUnit);

            @include breakpoint(mobile, portrait) {
                transform: translate(-$spacingUnit, -$spacingUnit);
            }

            @include breakpoint(mobile, landscape) {
                transform: translate(-$baseUnit, -$baseUnit);
            }
        }
    }
    > button {
        position: absolute;
        top: 0.5rem;
        left: 0.5rem;
        color: $onPrimary;
        transition: transform 1s;
        z-index: 1;
    }

    > div:first-of-type {
        display: flex;
        flex-direction: column;
        width: 100%;
        height: 100%;
        transition: all 1s;
        box-sizing: border-box;
        padding: $spacingUnit;
        position: relative;

        > p {
            text-align: center;
        }

        > div:first-of-type {
            overflow: auto;
            margin: 0 (-$spacingUnit);
            padding: 0 $spacingUnit;
            max-height: calc(100vh - #{4.2 * $marginUnit});

            @include breakpoint(mobile, portrait) {
                max-height: unset;
            }

            @include breakpoint(mobile, landscape) {
                max-height: unset;
            }

            .contentSize {
                > p {
                    font-size: 1.2rem;
                }
            }

            .toggledContent {
                margin-top: -1.5rem;
                margin-bottom: 2rem;
            }
        }

        .overlayInactive {
            position: absolute;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            background-color: rgba(0, 0, 0, 0.8);
            z-index: 10;

            display: flex;
            justify-content: center;
            align-items: center;
        }

        > div:last-of-type {
            background: $primary;
            backdrop-filter: blur(10px);
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            z-index: -1;
            border-radius: 5px;
        }
    }

    .submitBtn {
        @include button($fontSize: 1.2rem);
        margin-top: $spacingUnit;
    }

    .note {
        margin: 0.5rem;
        font-size: 0.6rem;
    }
}

:global {
    .mantine-InputWrapper-root {
        label {
            color: $onPrimary !important;
        }
    }

    .mantine-Switch-input {
        transition: all 300ms;
        &:checked {
            background-color: $secondary;
            border-color: lighten($secondary, 15%);
        }
    }

    .mantine-Slider-thumb {
        color: $secondary;
        border-color: $secondary;
    }

    .mantine-Slider-bar {
        background-color: $secondary;
    }

    .mantine-Slider-mark {
        border-color: lighten($secondary, 30%);
    }
}
